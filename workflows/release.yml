name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Phobos ${{ github.ref }}
        body: |
          ## ðŸš€ Phobos Release ${{ github.ref }}
          
          ### âš¡ What's New
          - Performance improvements
          - Bug fixes and stability enhancements
          - New scanning techniques
          
          ### ðŸ“¦ Installation
          Download the appropriate binary for your platform below.
          
          ### ðŸ”§ Usage
          ```bash
          # Basic scan
          ./phobos target.com -p 80,443
          
          # Advanced scan
          ./phobos target.com -p 1-65535 -s syn -T 4
          ```
          
          ### ðŸ“‹ Changelog
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: false

  build-release:
    name: Build Release
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: phobos-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: phobos-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            name: phobos-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: phobos-macos-aarch64
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    - uses: Swatinem/rust-cache@v2
    
    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Prepare binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cp target/${{ matrix.target }}/release/phobos ${{ matrix.name }}
        chmod +x ${{ matrix.name }}
    
    - name: Prepare binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cp target/${{ matrix.target }}/release/phobos.exe ${{ matrix.name }}
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./${{ matrix.name }}
        asset_name: ${{ matrix.name }}
        asset_content_type: application/octet-stream

  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build-release
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CRATES_TOKEN }}
      continue-on-error: true