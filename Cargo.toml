[package]
name = "phobos"
version = "1.1.1"
edition = "2021"
rust-version = "1.70"  # Minimum Supported Rust Version (MSRV)
authors = ["ibrahimsql"]
description = "Phobos: The Blazingly Fast Rust-Based Port Scanner That Outspeeds Nmap & Masscan"
license = "MIT"
repository = "https://github.com/ibrahmsql/phobos"
homepage = "https://github.com/ibrahmsql/phobos"
documentation = "https://docs.rs/phobos"
keywords = ["port-scanner", "network", "security", "rust", "nmap"]
categories = ["network-programming", "command-line-utilities"]
readme = "README.md"
license-file = "LICENSE"
exclude = [
    ".git*",
    ".github/",
    "assets/",
    "benches/",
    "tests/",
    "examples/",
    "*.sh",
    "Makefile",
    "justfile",
    "*.nix",
]
# publish = ["github-packages"]  # Uncomment for crates.io publishing

[dependencies]
tokio = { version = "1.0", features = ["full"] }
pnet = "0.33"
socket2 = "0.5"
clap = { version = "4.0", features = ["derive"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
reqwest = { version = "0.11", features = ["json"] }
rand = "0.8"
log = "0.4"
env_logger = "0.10"
libc = "0.2"
thiserror = "1.0"
anyhow = "1.0"
futures = "0.3"
tokio-util = "0.7"
bytes = "1.0"
toml = "0.8"
dirs = "5.0"
chrono = { version = "0.4", features = ["serde"] }
quick-xml = { version = "0.31", features = ["serialize"] }
csv = "1.3"
colored = "2.0"
indicatif = "0.17"
openssl = { version = "0.10", features = ["vendored"] }
rlimit = "0.10"
# Network Intelligence System dependencies
ipnetwork = "0.20"
cidr-utils = "0.6.1"
num_cpus = "1.16"
uuid = { version = "1.0", features = ["v4", "serde"] }
regex = "1.10"
async-trait = "0.1"
lazy_static = "1.4"
once_cell = "1.21.3"
rayon = "1.8"
tempfile = "3.8"

# GPU Acceleration (Optional)
ocl = { version = "0.19", optional = true }
ocl-core = { version = "0.11", optional = true }

[build-dependencies]
num_cpus = "1.16"

[features]
default = []
# Performance features
gpu = ["ocl", "ocl-core"]  # GPU acceleration (OpenCL)
full = ["gpu"]  # All features enabled
# Scanning technique features
stealth = []  # Stealth scanning optimizations
fast = []     # Maximum speed optimizations

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
tokio-test = "0.4"
proptest = "1.0"

[[bench]]
name = "performance"
harness = false

# Binary configuration
[[bin]]
name = "phobos"
path = "src/main.rs"
required-features = []  # No features required for basic binary

[profile.release]
opt-level = 3
lto = "fat"          # Full LTO: Maximum speed
codegen-units = 1    # Single unit: Best optimization
panic = "abort"
strip = true
# Native CPU optimization - Sistem özelliklerine göre optimize et

# RustScan'den DAHA HIZLI: Native CPU + Aggressive optimizations
[profile.release.build-override]
opt-level = 3

# Hızlı development build
[profile.release-fast]
inherits = "release"
lto = "thin"         # Thin LTO: Hızlı build
codegen-units = 16   # Paralel compile
opt-level = 2

[profile.dev]
opt-level = 1
incremental = true
debug = true

# Test profile optimizations
[profile.test]
opt-level = 1

# Benchmark profile
[profile.bench]
inherits = "release"

# Package metadata for crates.io
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# Badges for crates.io
[badges]
maintenance = { status = "actively-developed" }